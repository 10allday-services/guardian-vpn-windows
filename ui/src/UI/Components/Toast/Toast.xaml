<UserControl x:Class="FirefoxPrivateNetwork.UI.Components.Toast.Toast"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FirefoxPrivateNetwork.UI.Components.Toast"
             xmlns:extension="clr-namespace:FirefoxPrivateNetwork.UI"
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             mc:Ignorable="d" 
             d:DesignHeight="48" d:DesignWidth="360" MinHeight="32">

    <UserControl.Resources>
        <Storyboard x:Key="SlideUpAndFadeIn"  
                    TargetProperty="RenderTransform.(TranslateTransform.Y)"
                    AccelerationRatio=".4"
                    DecelerationRatio=".4">

            <DoubleAnimation Storyboard.TargetName="ToastGrid" Duration="0:0:0.2"  From="32" To="0"/>
            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ToastGrid" Duration="0:0:0.2" From="0" To="1"/>
        </Storyboard>

        <Storyboard x:Key="SlideDownAndFadeIn"  
                    TargetProperty="RenderTransform.(TranslateTransform.Y)"
                    AccelerationRatio=".4"
                    DecelerationRatio=".4">

            <DoubleAnimation Storyboard.TargetName="ToastGrid" Duration="0:0:0.2"  From="-32" To="0"/>
            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ToastGrid" Duration="0:0:0.2" From="0" To="1"/>
        </Storyboard>

        <Storyboard x:Key="FadeOut">
            <DoubleAnimation Storyboard.TargetName="ToastGrid" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2"/>
        </Storyboard>
    </UserControl.Resources>
    
    <Grid x:Name="ToastGrid" HorizontalAlignment="Stretch">
        <Grid.RenderTransform>
            <TranslateTransform />
        </Grid.RenderTransform>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="32" />
        </Grid.ColumnDefinitions>

        <Button Grid.Row="0" Grid.Column="0" Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Toast}}, Path=(extension:ButtonExtensions.ButtonContent)}" Click="Toast_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Toast}}, Path=(extension:ButtonExtensions.Background)}"/>
                </Style>
            </Button.Style>

            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4,0,0,4">
                        <ContentPresenter Content="{TemplateBinding Content}" Style="{StaticResource 'Byline 10'}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Toast}}, Path=(extension:ButtonExtensions.HoverBackground)}" />
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Toast}}, Path=(extension:ButtonExtensions.PressedBackground)}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button Grid.Row="0" Grid.Column="1" Click="Toast_Dismiss">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Toast}}, Path=(extension:ButtonExtensions.SecondaryBackground)}"/>
                </Style>
            </Button.Style>

            <Button.Template>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}" CornerRadius="0,4,4,0">
                        <Image Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Toast}}, Path=(extension:ButtonExtensions.IconUri), Converter={svgc:SvgImageConverter}}" Width="12" Height="12" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Toast}}, Path=(extension:ButtonExtensions.SecondaryHoverBackground)}" />
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Toast}}, Path=(extension:ButtonExtensions.SecondaryPressedBackground)}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>


    </Grid>
</UserControl>
