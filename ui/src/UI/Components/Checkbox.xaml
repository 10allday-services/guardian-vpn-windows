<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:FirefoxPrivateNetwork.UI.Components">
    <Style x:Key="Checkbox" TargetType="{x:Type CheckBox}" >
        <Setter Property="BorderBrush" Value="{StaticResource 'Grey/Grey 30'}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid x:Name="CheckboxGroup" Height="20" Width="20">
                                <Border Name="CheckboxOuter" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" CornerRadius="4"/>
                                <Path x:Name="CheckMark" Visibility="Hidden"  Stroke="{TemplateBinding Background}" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="False" StrokeThickness="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Data="M 1 4.5 L 4 7.5 M 4 7.5 L 8 1"/>
                            </Grid>
                        </BulletDecorator.Bullet>

                        <!--Text element-->
                        <TextBlock Style="{StaticResource 'Body 10'}" Margin="18,0,0,0" Text="{TemplateBinding Content}"/>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            <Setter Property="BorderBrush" Value="{StaticResource 'Grey/Grey 40'}" />
                            <Setter Property="Background" Value="{StaticResource 'Grey/Grey 10'}" />
                        </MultiTrigger>

                        <!--
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource 'Grey/Grey 40'}" />
                        </MultiTrigger>
                        -->

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            <Setter Property="BorderBrush" Value="{StaticResource 'Grey/Grey 40'}" />
                            <Setter Property="Background" Value="{StaticResource 'Grey/Grey 30'}" />
                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            <Setter Property="BorderBrush" Value="{StaticResource 'Blue/Blue 50'}" />
                            <Setter Property="Background" Value="{StaticResource 'Blue/Blue 50'}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            <Setter Property="BorderBrush" Value="{StaticResource 'Blue/Blue 70'}" />
                            <Setter Property="Background" Value="{StaticResource 'Blue/Blue 70'}" />
                        </MultiTrigger>

                        <!--
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            <Setter Property="BorderBrush" Value="{StaticResource 'Blue/Blue 70'}" />
                            <Setter Property="Background" Value="{StaticResource 'Blue/Blue 70'}" />
                        </MultiTrigger>
                        -->

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            <Setter Property="BorderBrush" Value="{StaticResource 'Blue/Blue 80'}" />
                            <Setter Property="Background" Value="{StaticResource 'Blue/Blue 80'}" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckboxGroup" Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>